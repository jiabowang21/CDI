
"""
def LZW_decode(encoded, chars):
    code2char = dict()
    for i in range(len(chars)):
        code2char[i] = chars[i]
    print(code2char)
    print(len(code2char))
    decoded = []
    print(code2char[encoded[0] - 1])
    prev_string = code2char[encoded[0] - 1]
    decoded.append(prev_string)
    for code in encoded[1:]:
        code = code - 1
        if code not in code2char:
            entry = prev_string + prev_string[0]
        else:
            entry = code2char[code]
        decoded.append(entry)
        code2char[len(code2char)] = prev_string + entry[0]
        prev_string = entry
    return ''.join(decoded)


encoded = [16, 29, 26, 1, 16, 30, 33, 50, 14, 22, 24, 29, 30, 34, 26, 4, 1, 12, 2, 26, 37, 23, 67, 39, 3, 1, 11, 66, 35, 37, 28, 26, 72, 18, 26, 32, 32, 38, 1, 20, 6, 7, 8, 7, 21, 86, 5, 94, 92, 47, 13, 1, 24, 35, 40, 32, 25, 1, 22, 32, 37, 26, 22, 25, 44, 1, 49, 22, 37, 1, 39, 49, 30, 116, 33, 40, 37, 122, 37, 60, 28, 1, 32, 22, 40, 28, 29, 39, 67, 105, 85, 118, 26, 112, 24, 22, 54, 117, 35, 42, 115, 25, 85, 54, 5, 1, 17, 67, 141, 106, 33, 32, 112, 98, 39, 126, 26, 104, 39, 35, 1, 38, 162, 30, 31, 50, 139, 1, 33, 22, 39, 58, 152, 98, 29, 110, 1, 35, 34, 159, 145, 1, 27, 30, 43, 184, 34, 117, 49, 129, 26, 41, 67, 85, 22, 34, 104, 25, 26, 36, 115, 39, 195, 26, 194, 32, 171, 50, 22, 1, 133, 35, 169, 152, 10, 40, 209, 181, 183, 35, 199, 37, 32, 35, 35, 172, 104, 185, 50, 213, 39, 39, 32, 173, 59, 34, 28, 152, 48, 50, 176, 178, 49, 85, 42, 67, 50, 35, 27, 195, 177, 105, 23, 35, 33, 60, 22, 23, 240, 1, 31, 60, 165, 182, 209, 213, 133, 209, 185, 187, 185, 210, 1, 260, 43, 152, 47, 19, 101, 175, 22, 112, 53, 22, 28, 60, 50, 29, 146, 105, 83, 175, 156, 32, 33, 1, 41, 202, 30, 38, 49, 25, 245, 196, 237, 239, 50, 23, 37, 223, 26, 251, 253, 99, 230, 38, 50, 40, 36, 278, 151, 1, 15, 61, 145, 40, 58, 164, 175, 26, 180, 287, 205, 105, 168, 252, 206, 127, 280, 230, 42, 1, 60, 279, 25, 115, 31, 105, 209, 139, 302, 42, 30, 118, 279, 240, 228, 38, 63, 202, 104, 69, 28, 202, 188, 38, 24, 37, 143, 265, 50, 60, 166, 279, 38, 110, 25, 266, 255, 279, 176, 58, 293, 310, 211, 99, 143, 254, 331, 182, 203, 1, 325, 327, 215, 398, 139, 194, 202, 35, 139, 37, 391, 194, 225, 104, 38, 53, 36, 187, 380, 190, 274, 105, 370, 60, 169, 210, 120, 1, 36, 200, 306, 135, 34, 209, 190, 243, 200, 189, 76, 299, 197, 364, 366, 398, 258, 174, 382, 144, 39, 53, 50, 27, 26, 82, 437, 116, 445, 39, 40, 149, 184, 228, 1, 42, 59, 58, 210, 323, 189, 360, 135, 309, 329, 61, 63, 269, 452, 25, 63, 139, 112, 157, 219, 209, 28, 407, 105, 147, 112, 27, 37, 261, 336, 152, 9, 85, 360, 168, 213, 36, 428, 104, 489, 491, 33, 112, 397, 477, 1, 412, 188, 23, 223, 209, 350, 174, 352, 37, 354, 359, 361, 504, 113, 109, 25, 45, 98, 100, 102, 104, 114, 455, 196, 14, 76, 230, 24, 31, 46, 85, 38, 31, 102, 32, 1, 126, 243, 45, 380, 108, 100, 461, 360, 180, 209, 147, 201, 1, 61, 115, 136, 118, 345, 118, 371, 174, 419, 134, 349, 194, 565, 76, 318, 39, 63, 161, 242, 31, 478, 59, 85, 130, 424, 373, 375, 33, 377, 5, 0]
chars = [' ', '(', ')', ',', '.', '1', '8', '9', 'A', 'B', 'G', 'H', 'I', 'M', 'O', 'T', 'V', 'W', 'Y', '[', ']', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'k', 'l', 'm', 'n', 'o', 'p', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', '—', '’', '“']

#encoded = [1,2,3,5,2,4]
#chars = ['a', 'b']

print(LZW_decode(encoded, chars))
"""
"""
"The Time Machine, H(erbert) G(eorge) Wells [1898] [...] “I tried to call to them, but the language they had was apparently different from that of the Overworld people; so that I was needs left to my own unaided efforts, and the thought of flight before exploration was even then in my mind. But I said to myself, ‘You are in for it now,’ and, feeling my way along the tunnel, I found the noise of machinery grow louder. Presently the walls fell away from me, and I came to a large open space, and striking another match, saw that I had entered a vast arched cavern, which stretched into utter darkness beyond the range of my light. The view I had of it was as much as one could see in the burning of a match..."
"The Time Machine, H(erbert) G(eorge) Wells [1898] [...] “I tried to call to them, but the language they had was apparently different from that of the Overworld people; so that I was needs left to my own unaided efforts, and the thought of flight before exploration was even then in my mind. But I said to myself, ‘You are in for it now,’ and, feeling my way along the tunnel, I found the noise of machinery grow louder. Presently the walls fell away from me, and I came to a large open space, and striking another match, saw that I had entered a vast arched cavern, which stretched into utter darkness beyond the range of my light. The view I had of it was as much as one could see in the burning of a match."
"""

#decode LZ77
"""
def LZ77Decode(codigo): 
    result = ""
    for t in codigo:
        c = 0
        pos = t[2]
        length = t[1]
        pos = len(result) - pos
        while length > 0:
            c += 1
            result = result+result[pos]
            pos = pos+1
            length = length-1
        if t[0] != "EOF" :
            result = result + t[0]
    return result

code=[['T', 0, 0], ['h', 0, 0], ['e', 0, 0], [' ', 0, 0], ['i', 1, 4], ['m', 0, 0], ['M', 2, 5], ['a', 0, 0], ['c', 0, 0], ['i', 1, 11], ['n', 0, 0], [',', 1, 8], ['H', 1, 9], ['(', 0, 0], ['r', 1, 5], ['b', 0, 0], ['t', 2, 3], [')', 0, 0], ['G', 1, 10], ['o', 2, 10], ['g', 1, 8], [')', 1, 4], ['W', 1, 9], ['l', 1, 4], ['s', 1, 1], ['[', 1, 6], ['1', 0, 0], ['8', 0, 0], ['9', 0, 0], [']', 1, 2], ['.', 2, 7], [']', 2, 1], ['“', 1, 6], ['y', 1, 48], ['s', 1, 4], ['n', 1, 23], ['a', 1, 3], ['i', 1, 40], ['n', 1, 36], ['w', 2, 28], ['u', 1, 5], ['d', 1, 34], ['b', 1, 6], [' ', 1, 17], ['h', 0, 0], ['r', 1, 17], ['t', 2, 8], [' ', 1, 14], ['e', 1, 5], ['c', 1, 21], ['i', 1, 10], ['.', 2, 17], ['A', 1, 10], ['t', 2, 30], ['e', 1, 22], ['c', 1, 4], ['l', 1, 20], ['m', 1, 35], ['o', 3, 42], ['f', 0, 0], ['i', 3, 36], [' ', 1, 12], ['g', 0, 0], ['e', 1, 30], [' ', 1, 53], ['i', 2, 25], ['n', 1, 19], ['r', 1, 8], [',', 0, 0], ['I', 1, 9], ['s', 1, 2], ['w', 1, 21], ['w', 5, 40], ['t', 2, 19], ['f', 2, 6], ['g', 1, 5], ['r', 1, 46], ['m', 2, 7], ['r', 1, 46], ['d', 2, 5], ['s', 1, 12], ['i', 1, 18], ['c', 1, 38], ['l', 1, 4], ['y', 0, 0], ['.', 0, 0], ['t', 2, 40], ['a', 2, 33], [' ', 1, 15], ['v', 0, 0], ['y', 2, 52], ['l', 1, 5], ['r', 1, 9], ['e', 1, 37], ['f', 2, 59], [' ', 2, 36], [' ', 1, 10], ['i', 1, 20], ['v', 1, 15], [' ', 2, 21], ['b', 0, 0], ['r', 1, 7], ['h', 1, 41], ['-', 0, 0], ['r', 1, 37], ['e', 1, 11], ['t', 1, 11], ['u', 1, 24], ['e', 2, 11], [' ', 1, 61], ['t', 1, 18], ['s', 2, 48], ['o', 1, 9], ['l', 1, 13], ['e', 1, 11], ['.', 1, 23], ['I', 1, 10], [' ', 1, 14], ['w', 0, 0], ['s', 1, 46], ['o', 1, 4], [' ', 1, 54], ['h', 1, 7], ['e', 2, 26], ['m', 1, 6], ['r', 1, 13], ['l', 1, 52], [',', 1, 7], ['n', 2, 38], ['a', 3, 37], ['p', 0, 0], ['s', 2, 17], ['m', 1, 27], ['t', 1, 5], ['n', 2, 27], ['g', 0, 0], ['l', 1, 10], ['k', 1, 5], ['a', 2, 15], ['i', 2, 40], ['e', 2, 12], [' ', 1, 60], ['p', 1, 24], ['x', 3, 21], ['b', 2, 41], ['u', 0, 0], [' ', 1, 30], ['e', 2, 32], ['s', 5, 23], ['s', 4, 56], ['e', 1, 14], ['d', 1, 37], ['o', 1, 8], ['f', 0, 0], ['e', 2, 26], ['c', 4, 54], ['r', 1, 13], ['i', 1, 1], ['v', 3, 48], ['r', 1, 4], ['i', 1, 25], ['l', 2, 13], ['y', 1, 1], ['a', 1, 11], ['s', 6, 50], ['d', 1, 15], ['s', 1, 5], ['w', 2, 50], ['e', 2, 25], ['p', 2, 12], ['a', 2, 5], ['s', 2, 37], [' ', 1, 55], ['a', 2, 26], ['i', 2, 31], ['s', 2, 3], ['e', 1, 16], ['m', 0, 0], ['t', 3, 55], ['h', 2, 18], ['v', 1, 3], ['.', 2, 35], ['T', 1, 7], ['p', 3, 51], ['e', 2, 18], ['t', 1, 25], ['l', 1, 33], ['i', 2, 54], ['a', 2, 34], ['p', 1, 14], ['r', 2, 52], ['m', 6, 36], [',', 1, 7], ['w', 1, 4], ['s', 1, 13], ['o', 1, 4], ['f', 0, 0], ['b', 1, 3], ['o', 1, 19], ['n', 0, 0], ['z', 0, 0], ['a', 3, 15], ['d', 1, 6], ['t', 5, 19], ['i', 1, 56], ['c', 0, 0], ['k', 0, 0], ['i', 2, 10], [' ', 2, 8], ['v', 0, 0], ['r', 1, 23], ['i', 1, 20], ['g', 0, 0], ['i', 1, 4], ['.', 1, 21], ['I', 1, 11], [' ', 1, 15], ['h', 1, 22], ['c', 2, 35], ['h', 4, 63], ['t', 1, 8], ['e', 3, 5], ['f', 1, 4], ['c', 1, 8], ['w', 2, 5], ['o', 4, 51], ['r', 2, 6], ['s', 1, 25], ['m', 1, 8], [';', 1, 15], ['s', 5, 25], ['h', 2, 53], ['l', 1, 8], ['s', 1, 8], ['e', 2, 18], ['y', 0, 0], [' ', 2, 6], ['e', 1, 2], ['m', 1, 1], ['o', 4, 56], ['t', 3, 45], ['h', 1, 51], ['r', 8, 39], ['h', 7, 61], ['f', 2, 8], ['i', 1, 8], ['n', 0, 0], [' ', 1, 8], ['h', 1, 12], ['d', 1, 7], ['w', 1, 36], ['o', 1, 7], [' ', 1, 14], [' ', 1, 8], ['m', 1, 12], ['l', 1, 18], ['o', 2, 24], [' ', 1, 22], ['l', 4, 31], ['p', 1, 12], ['.', 1, 16], ['I', 1, 6], ['w', 2, 34], ['g', 3, 48], ['a', 2, 56], ['l', 1, 10], ['y', 0, 0], ['e', 2, 12], ['h', 2, 7], ['r', 1, 4], ['-', 0, 0], ['o', 1, 8], ['n', 1, 4], [',', 0, 0], ['n', 2, 50], [' ', 1, 59], ['a', 2, 15], ['i', 2, 35], ['p', 1, 57], ['r', 1, 6], ['e', 1, 7], ['a', 2, 14], ['u', 2, 60], ['p', 1, 3], ['e', 1, 41], ['a', 2, 51], ['t', 1, 7], ['s', 1, 11], ['g', 1, 12], ['e', 1, 1], ['t', 1, 5], ['o', 1, 30], ['o', 2, 22], ['f', 0, 0], ['d', 1, 3], ['s', 1, 8], ['e', 3, 24], ['.', 0, 0], ['I', 1, 9], ['t', 2, 25], ['o', 1, 16], ['l', 2, 45], ['k', 2, 5], ['n', 1, 20], [' ', 1, 34], ['t', 1, 21], ['i', 1, 3], ['f', 2, 3], ['r', 1, 13], [' ', 2, 10], ['i', 1, 20], ['t', 1, 10], [' ', 2, 63], ['p', 1, 33], ['c', 1, 11], ['—', 1, 6], ['h', 0, 0], ['l', 1, 5], ['a', 2, 55], ['m', 1, 2], ['u', 2, 37], ['e', 1, 21], [',', 0, 0], ['p', 1, 8], ['r', 1, 4], ['p', 2, 18], [',', 1, 27], ['o', 1, 9], ['h', 2, 42], ['n', 5, 27], ['o', 2, 8], ['r', 1, 27], ['.', 0, 0], ['I', 1, 6], ['s', 2, 63], ['e', 1, 29], ['e', 1, 40], ['d', 0, 0], ['t', 1, 7], [' ', 1, 16], ['d', 1, 22], ['v', 0, 0], ['c', 2, 25], [' ', 1, 12], ['d', 2, 5], ['r', 4, 15], ['c', 1, 10], ['e', 2, 24], ['s', 2, 14], ['h', 2, 13], ['h', 2, 7], ['i', 1, 8], [' ', 1, 57], ['r', 1, 15], ['v', 1, 23], ['b', 2, 11], ['f', 1, 3], ['r', 1, 7], ['i', 2, 7], ['d', 2, 60], ['n', 1, 6], ['r', 2, 63], ['o', 1, 7], ['t', 2, 3], ['i', 1, 32], ['n', 1, 11], ['.', 2, 11], ['A', 1, 9], ['l', 2, 22], ['t', 2, 51], ['I', 1, 5], ['o', 2, 19], ['m', 3, 37], ['y', 0, 0], ['e', 1, 3], ['e', 1, 3], [' ', 1, 16], ['r', 1, 50], ['m', 1, 14], ['f', 4, 50], ['a', 3, 44], ['o', 2, 22], ['e', 1, 2], ['t', 1, 46], [',', 0, 0], ['n', 2, 10], ['d', 0, 0], ['s', 1, 4], ['w', 1, 5], ['a', 3, 62], ['t', 2, 27], ['e', 1, 5], ['h', 1, 4], ['i', 1, 8], [' ', 1, 62], ['c', 0, 0], ['u', 0, 0], ['t', 1, 36], ['n', 2, 8], ['d', 3, 13], ['w', 1, 4], ['n', 2, 48], ['r', 3, 26], ['a', 1, 27], ['b', 1, 12], ['r', 1, 3], [',', 1, 6], ['t', 5, 51], ['s', 8, 47], ['k', 0, 0], ['y', 0, 0], ['a', 2, 34], [' ', 1, 6], ['i', 1, 52], ['g', 0, 0], ['t', 1, 14], ['n', 1, 15], ['g', 2, 52], ['i', 2, 15], [' ', 2, 25], ['p', 4, 28], ['o', 1, 46], ['m', 0, 0], ['s', 1, 12], ['o', 2, 8], ['f', 0, 0], ['u', 6, 43], ['.', 1, 29], ['EOF', 0, 0]]
print(LZ77Decode(code))
"""
"""
def LZ78Decode(codigo):
    result = ""
    rr = []
    for t in codigo:
        print("iteracion %c" % t[1])
        pos = t[0] - 1
        if t[0] > 0:
            aux = result[pos] 
            aux2 = aux + t[1]
            pos += 1
            while aux2 in rr and pos < len(result):
                aux = aux + result[pos]
                pos = pos + 1
                aux2 = aux + t[1]
            result += aux
        if t[1] != "EOF" :
            result = result + t[1]
        print(result)
        rr.append(t[1])
    return result
"""


#decode LZ78
def LZ78Decode(codigo):
  dic = []
  output = ''
  for n,c in codigo:
    dic.append([n,c])
    if n == 0:
      if c != 'EOF':
        output += c
    else:
      aux = ''
      while dic[n-1][0] != 0:
        aux += dic[n-1][1]
        n = dic[n-1][0]
      aux += dic[n-1][1]
      output += aux[::-1] # reverse
      if c != 'EOF':
        output += c
  return output

code = [[0, 'T'], [0, 'h'], [0, 'e'], [0, ' '], [1, 'i'], [0, 'm'], [3, ' '], [0, 'M'], [0, 'a'], [0, 'c'], [2, 'i'], [0, 'n'], [7, 'b'], [0, 'y'], [4, 'H'], [0, '('], [3, 'r'], [0, 'b'], [17, 't'], [0, ')'], [4, 'G'], [16, 'e'], [0, 'o'], [0, 'r'], [0, 'g'], [3, ')'], [4, 'W'], [3, 'l'], [0, 'l'], [0, 's'], [4, '['], [0, '1'], [0, '8'], [0, '9'], [33, ']'], [31, '.'], [0, '.'], [37, ']'], [4, 'O'], [0, 'f'], [4, 'c'], [23, 'u'], [24, 's'], [7, 'w'], [7, 'h'], [9, 'v'], [7, 'n'], [23, ' '], [6, 'e'], [9, 'n'], [30, ' '], [23, 'f'], [4, 's'], [0, 't'], [9, 'y'], [0, 'i'], [12, 'g'], [4, 'b'], [9, 'c'], [0, 'k'], [4, 'f'], [23, 'r'], [4, 'a'], [12, 'y'], [4, 'l'], [3, 'n'], [25, 't'], [2, ' '], [52, ' '], [5, 'm'], [3, ','], [63, 'n'], [14, ' '], [6, 'o'], [24, 'e'], [4, 't'], [2, 'a'], [12, ' '], [9, ' '], [30, 'a'], [0, 'v'], [9, 'g'], [7, 'o'], [24, ' '], [50, ' '], [50, 'i'], [6, 'a'], [29, ' '], [77, 's'], [4, 'o'], [40, ' '], [30, 't'], [55, 'i'], [57, ' '], [30, 'i'], [0, 'x'], [61, 'e'], [3, 't'], [63, 'b'], [23, 'v'], [7, 't'], [2, 'e'], [4, 'g'], [24, 'o'], [0, 'u'], [12, 'd'], [37, ' '], [0, 'B'], [105, 't'], [63, ' '], [10, 'i'], [81, 'i'], [29, 'i'], [0, 'z'], [3, 'd'], [4, 'm'], [85, 'i'], [51, 'b'], [98, 't'], [17, ' '], [52, 'f'], [76, 'h'], [85, 't'], [102, ' '], [80, 'v'], [82, 'e'], [4, 'i'], [78, 't'], [11, 's'], [4, 'r'], [3, 's'], [0, 'p'], [3, 'c'], [54, '.'], [15, 'e'], [41, 'a'], [78, 'g'], [48, 'u'], [132, ' '], [82, 'a'], [56, 'n'], [92, ' '], [25, 'r'], [46, 'i'], [54, 'a'], [54, 'i'], [23, 'n'], [127, 'n'], [110, 'b'], [9, 'l'], [29, 'o'], [147, ','], [72, 'd'], [4, 'w'], [2, 'y'], [53, 'h'], [42, 'l'], [0, 'd'], [4, 'h'], [47, 'o'], [54, ' '], [2, 'o'], [132, 'e'], [122, 'a'], [161, 'u'], [29, 't'], [56, 'm'], [9, 't'], [28, 'y'], [159, 'e'], [116, 'a'], [73, 'b'], [7, 'a'], [18, 'l'], [101, 'o'], [53, 't'], [23, 'p'], [90, 'r'], [63, 'c'], [10, 'e'], [29, 'e'], [24, 'a'], [54, 'e'], [159, 'i'], [51, 'd'], [24, 'i'], [40, 't'], [63, 'l'], [147, 'g'], [122, 'e'], [4, 'T'], [167, 'e'], [0, '-'], [0, 'D'], [192, 'n'], [95, 'o'], [12, ','], [178, ' '], [3, 'v'], [66, ' '], [54, 'u'], [24, 'n'], [99, 'o'], [109, ' '], [50, 'd'], [76, 'r'], [46, 'e'], [88, 't'], [124, 'o'], [54, 'h'], [120, 'w'], [55, '?'], [39, 'h'], [0, ','], [191, 'H'], [0, 'I'], [0, 'S'], [214, ' '], [18, 'e'], [25, 'a'], [78, 'F'], [56, 'l'], [18, 'y'], [218, 'i'], [51, 'a'], [29, 'l'], [193, '-'], [27, 'h'], [73, 'n'], [23, 't'], [0, '?'], [53, 'a'], [56, 'd'], [190, ' '], [70, 'e'], [191, 'r'], [207, 'l'], [181, 'r'], [37, 'EOF']]

print(LZ78Decode(code))


#decode LZW

