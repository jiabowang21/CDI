import scipy
import scipy.ndimage
from scipy.cluster.vq import vq, kmeans, whiten
from scipy import misc

import math
import numpy as np 
import time
import matplotlib.pyplot as plt 
import imageio
import PIL
import pickle

I = np.array([[1,1,1,1]])

x = np.array([0.39, 0.463, 0.556, 0.331, 0.663, 0.898, 0.611, 0.174, -0.174, -0.611, -0.898, -0.663, -0.331, -0.556, -0.463, -0.39])

suma = 0
for i in range(len(x)):
	suma += x[i]*x[i]

IIxII = suma

y = np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0])

x2 = np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0])

A = np.array(

[[0.03465429229977286, 0.1666639146194366, 0.27330046675043934, 0.33832950029358816, 0.3518509343815956, 0.3118062532466678, 0.22429189658565904, 0.10263113188058935, -0.034654292299772856, -0.1666639146194366, -0.27330046675043923, -0.33832950029358805, -0.3518509343815956, -0.3118062532466678, -0.2242918965856592, -0.10263113188058968],
[0.06897484482073574, 0.29396890060483966, 0.3467599613305368, 0.1964237395967755, -0.06897484482073578, -0.29396890060483966, -0.3467599613305368, -0.1964237395967755, 0.06897484482073574, 0.29396890060483966, 0.34675996133053694, 0.19642373959677611, -0.06897484482073539, -0.2939689006048396, -0.34675996133053694, -0.19642373959677614],
[0.10263113188058932, 0.3518509343815956, 0.1666639146194367, -0.2242918965856591, -0.3383295002935881, -0.03465429229977283, 0.3118062532466677, 0.27330046675043956, -0.10263113188058948, -0.3518509343815956, -0.16666391461943736, 0.22429189658565826, 0.33832950029358827, 0.03465429229977296, -0.31180625324666766, -0.2733004667504396],
[0.13529902503654925, 0.3266407412190941, -0.1352990250365492, -0.3266407412190941, 0.1352990250365493, 0.3266407412190941, -0.13529902503654925, -0.3266407412190941, 0.13529902503654923, 0.32664074121909414, -0.1352990250365486, -0.3266407412190946, 0.13529902503654856, 0.32664074121909414, -0.1352990250365485, -0.32664074121909464],
[0.1666639146194366, 0.22429189658565904, -0.33832950029358816, 0.034654292299772974, 0.31180625324666783, -0.2733004667504394, -0.10263113188058917, 0.3518509343815956, -0.166663914619437, -0.2242918965856596, 0.338329500293588, -0.03465429229977119, -0.3118062532466679, 0.27330046675043923, 0.10263113188059056, -0.3518509343815958],
[0.1964237395967755, 0.06897484482073588, -0.2939689006048397, 0.3467599613305369, -0.19642373959677586, -0.06897484482073568, 0.2939689006048398, -0.3467599613305367, 0.19642373959677575, 0.0689748448207358, -0.2939689006048406, 0.34675996133053644, -0.19642373959677462, -0.06897484482073593, 0.29396890060484, -0.34675996133053666],
[0.22429189658565904, -0.10263113188058924, -0.03465429229977283, 0.1666639146194362, -0.2733004667504392, 0.33832950029358816, -0.35185093438159565, 0.31180625324666766, -0.22429189658565912, 0.10263113188058988, 0.03465429229977438, -0.1666639146194387, 0.27330046675044056, -0.3383295002935882, 0.3518509343815955, -0.3118062532466669],
[0.24999999999999997, -0.24999999999999997, 0.24999999999999992, -0.2500000000000001, 0.25000000000000006, -0.25000000000000006, 0.25, -0.25, 0.24999999999999997, -0.24999999999999992, 0.24999999999999903, -0.24999999999999808, 0.24999999999999895, -0.2499999999999998, 0.24999999999999886, -0.24999999999999795],
[0.27330046675043934, -0.33832950029358816, 0.3518509343815956, -0.31180625324666783, 0.22429189658565904, -0.10263113188058924, -0.03465429229977244, 0.1666639146194369, -0.27330046675043923, 0.33832950029358794, -0.3518509343815958, 0.3118062532466698, -0.22429189658565984, 0.10263113188058962, 0.0346542922997708, -0.16666391461943322],
[0.29396890060483966, -0.3467599613305368, 0.19642373959677556, 0.06897484482073596, -0.2939689006048396, 0.3467599613305368, -0.19642373959677525, -0.06897484482073636, 0.29396890060484016, -0.3467599613305371, 0.19642373959677645, 0.06897484482073245, -0.2939689006048393, 0.34675996133053694, -0.19642373959677767, -0.06897484482073102],
[0.3118062532466678, -0.27330046675043934, -0.10263113188058948, 0.35185093438159565, -0.1666639146194363, -0.22429189658565912, 0.33832950029358816, -0.034654292299773175, -0.31180625324666816, 0.273300466750439, 0.1026311318805872, -0.35185093438159537, 0.16666391461943894, 0.2242918965856588, -0.33832950029358905, 0.03465429229977615],
[0.3266407412190941, -0.13529902503654945, -0.326640741219094, 0.135299025036549, 0.3266407412190944, -0.13529902503654911, -0.3266407412190939, 0.1352990250365504, 0.32664074121909437, -0.13529902503654936, -0.32664074121909287, 0.13529902503655294, 0.32664074121909326, -0.13529902503654959, -0.3266407412190937, 0.13529902503655086],
[0.33832950029358816, 0.034654292299772654, -0.31180625324666783, -0.27330046675043934, 0.10263113188058928, 0.3518509343815956, 0.1666639146194368, -0.2242918965856598, -0.33832950029358827, -0.0346542922997721, 0.3118062532466687, 0.2733004667504358, -0.10263113188059103, -0.35185093438159537, -0.166663914619433, 0.22429189658566315],
[0.3467599613305368, 0.1964237395967754, -0.06897484482073568, -0.29396890060483916, -0.34675996133053694, -0.19642373959677567, 0.06897484482073475, 0.29396890060484, 0.3467599613305369, 0.19642373959677645, -0.06897484482073875, -0.29396890060484226, -0.3467599613305361, -0.19642373959677517, 0.06897484482073782, 0.29396890060484177],
[0.3518509343815956, 0.3118062532466677, 0.2242918965856588, 0.10263113188058995, -0.03465429229977309, -0.16666391461943647, -0.2733004667504398, -0.33832950029358827, -0.3518509343815956, -0.311806253246668, -0.22429189658565776, -0.10263113188058572, 0.03465429229977374, 0.16666391461943927, 0.27330046675044256, 0.33832950029359027],
[0.24999999999999997, 0.24999999999999997, 0.24999999999999997, 0.24999999999999997, 0.24999999999999997, 0.24999999999999997, 0.24999999999999997, 0.24999999999999997, 0.24999999999999997, 0.24999999999999997, 0.24999999999999997, 0.24999999999999997, 0.24999999999999997, 0.24999999999999997, 0.24999999999999997, 0.24999999999999997]])
B = np.linalg.inv(A)

for i in range(len(A)):
	for j in range(len(A[0])):
		y[i] += A[i][j]*x[j]

y[3:] = 0.0

print(y)

for i in range(len(B)):
	for j in range(len(B[0])):
		x2[i] += B[i][j]*y[j]

print(x2)

suma = 0
for i in range(len(x2)):
	suma += x2[i]*x2[i]

IIx2II = suma


print(( IIx2II/IIxII)) 

"""
AI = np.transpose(A)

print(AI)

AT = np.linalg.inv(A)


print(AT)
"""
"""
X = AI*I*A

plt.figure()
plt.imshow(X, cmap=plt.cm.gray)
plt.show()

"""